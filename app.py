from flask import Flask, render_template, redirect, flashfrom flask_sqlalchemy import SQLAlchemyfrom datetime import datetimefrom forms import RegistrationForm, LoginFormapp = Flask(__name__)app.config['SECRET_KEY'] = '819e10e5964f4909f99d10af68f0cc93'app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'db = SQLAlchemy(app)class User(db.Model):    id = db.Column(db.Integer, primary_key=True)    username = db.Column(db.String(20), unique=True, nullable=False)    email = db.Column(db.String(120), unique=True, nullable=False)    image_file = db.Column(db.String(20), nullable=False, default='default.jpg')    password = db.Column(db.String(50), nullable=False)    posts = db.relationship('Post', backref='author', lazy=True)    def __repr__(self):        return f"User ('{self.username}')"class Post(db.Model):    id = db.Column(db.Integer, primary_key=True)    title = db.Column(db.String(70), nullable=False)    content = db.Column(db.Text, nullable=False)    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)    created_at = db.Column(db.DateTime, nullable=False,                           default=datetime.utcnow)    def __repr__(self):        return '<Title %r>' % self.title# Static dataposts = [    {        'id': 1,        'author': 'sagor',        'title': 'How to install flask on mac OS',        'content': 'You may use a command link like, pip install flask or sudo pip install flask',        'date': 'April, 07, 2020',    },    {        'id': 2,        'author': 'shimul',        'title': 'How to install django on mac OS',        'content': 'You may use a command link like, pip install django or sudo pip install django',        'date': 'April, 08, 2020',    }]# @app.route('/', methods=['get', 'post'])@app.route('/')def homepage():    return render_template('index.html', posts=posts)@app.route('/about')def about_us():    return render_template('about.html', title='About-us')@app.route('/register', methods=['GET', 'Post'])def register():    form = RegistrationForm()    if form.validate_on_submit():        flash(f"User has been created {form.username.data}!!", 'success')        return redirect('/')    return render_template('auth/register.html', title='Registration', form=form)@app.route('/login', methods=['GET', 'Post'])def login():    form = LoginForm()    if form.validate_on_submit():        if form.email.data == 'mbrsgor@gmail.com' and form.password.data == '123':            return redirect('/')        else:            flash("username and password doesn't match...", 'danger')    return render_template('auth/login.html', title='Login', form=form)if __name__ == '__main__':    app.run(debug=True)